#include "stdlibUtil.hmm"

// メモリを解放する
public void free(void[] mem) {                  // 領域解放
  MemBlk q = _addrAdd(mem, -MBSIZE);            // 解放する領域
  MemBlk p = _memPool;                           // 直前の空き領域
  MemBlk m = p.next;                            // 直後の空き領域
  if (q.next!=MAGIC) _exit(EUBADA);             // 領域マジックナンバー確認

  while (_aCmp(m, q)<0) {                       // 解放する領域の位置を探る
    p = m;
    m = m.next;
    if (m==null) break;
  }

  void[] ql = _addrAdd(q, q.size);              // 解放する領域の最後
  void[] pl = _addrAdd(p, p.size);              // 直前の領域の最後

  if (_aCmp(q,pl)<0 || m!=null&&_aCmp(m,ql)<0)  // 未割り当て領域では？
    _exit(EUBADA);
   
  if (pl==q) {                                  // 直前の領域に隣接している
    p.size = p.size + q.size;
    if (ql==m) {                                // 直後の領域とも隣接してる
      p.size = p.size + m.size;
      p.next = m.next;
    }
  } else if (ql==m) {                           // 直後の領域に隣接している
    q.size = q.size + m.size;
    q.next = m.next;
    p.next = q;
  } else {
    p.next = q;
    q.next = m;
  }
}